¿Qué salió bien?
● Hubo una gran comunicación en el equipo, constantemente informamos en qué tareas estábamos trabajando y nos apoyamos trabajando de forma coordinada, realizando reuniones diarias. Una comunicación efectiva y un trabajo en equipo coordinado son fundamentales para el éxito de cualquier proyecto.
● Hubo empatía y ambiente agradable, como equipo realizamos sesiones de descanso grupal haciendo más ameno el ambiente y resolviendo conflictos internos por medio de videojuegos. Crear un ambiente de trabajo agradable y lúdico es crucial para mantener un equipo motivado y comprometido.
● Se lograron cumplir las historias de usuario dentro del tiempo previsto antes de la fecha de entrega. El hecho de que se hayan cumplido todas las historias de usuario en el tiempo previsto es una clara indicación de que el equipo está trabajando eficientemente y gestionando bien su tiempo.
● Logramos generar un buen flujo de trabajo. Si bien en etapas tempranas del sprint tuvimos problemas de versionado y manejo de cambios, llegamos a un punto en el que todos estaban progresando en alguna característica simultáneamente. La gestión efectiva del control de versiones es crucial en el desarrollo de software, especialmente en un entorno de equipo.

¿Qué salió mal?	
● No hubo un correcto uso del backlog sino que las tareas se fueron asignando a medida se necesitaban. El backlog es esencial para la gestión del proyecto, ya que permite una asignación y seguimiento eficiente de las tareas.
● Inicialmente éramos un equipo desorganizado, con la implementación de Scrum y las prácticas ágiles, este aspecto ha mejorado a lo largo del desarrollo del proyecto.
● Mal uso del repositorio, muchas ramas eran redundantes y poco explícitas sobre qué se trabajaba en ellas. Un buen punto a seguir podría ser la adopción de una convención de nombres para las ramas que refleje el trabajo que se realiza en ellas, debido a que el control de versiones y la gestión de ramas son esenciales.
● Mal uso de commits, cambios muy grandes en commits poco descriptivos. Grandes commits pueden hacer difícil la revisión del código y la identificación de dónde se introdujeron los bugs.
● Falta de familiarización con el software, el desarrollo del proyecto fue lento inicialmente ya que se necesitaba estudiar las nuevas tecnologías. La capacitación, la tutoría y la dedicación de tiempo para aprender y experimentar con las nuevas tecnologías ayudaron a superar este obstáculo.
● Se realizaron historias que no fueron declaradas en el PMV debido que se descubrió que eran necesarias para el correcto desarrollo inicial del videojuego, esto se refleja en que algunos integrantes tengan menores horas de aporte en las historias del PMV. Sin embargo, a medida que el desarrollo avanza, es normal descubrir nuevas necesidades. El equipo debe trabajar para incorporar estos hallazgos en las futuras planificaciones de Sprint.

¿Que se debería mantener?
● Mantener la motivación y el compromiso en el proyecto. A pesar de las complicaciones, nos mantuvimos trabajando incluso a altas horas de la noche, demostrando el alto nivel de compromiso y pasión por el proyecto. Es importante recordar el equilibrio entre el trabajo y la vida personal, y reconocemos que una mejor gestión de tiempo nos ayudaría a evitar estas cosas, sin embargo es bueno que todos estemos dispuestos a sacar adelante el proyecto.
● La buena comunicación entre los integrantes, el proyecto nunca se quedaba congelado, siempre que había una complicación, se trabajaba en equipo para solucionarlo. Mantener esta buena comunicación ayudará a resolver problemas más rápidamente, facilitará la colaboración y mantendrá a todos en la misma página.
● La metodología que obtuvimos durante el desarrollo del proyecto fue bastante buena, logramos aprender cómo usar esta nueva tecnología (quienes sabían más le enseñaban a sus compañeros) y nos adaptamos para que nuestro proyecto avance de la mejor manera posible. Continuar con esta mentalidad de crecimiento y adaptación será beneficioso para futuros desafíos y proyectos.