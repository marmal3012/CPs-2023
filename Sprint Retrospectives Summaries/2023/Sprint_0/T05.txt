¿Qué salió bien?
● Se definieron roles específicos para cada miembro del equipo, lo que permitió una mejor distribución de las responsabilidades según fortalezas y conocimientos de cada uno, junto con identificar a los miembros a los cuales acercase para consultar acerca de un tema particular, ya sea de código o de alguna tecnología a utilizar.
● Se lograron avances significativos en la programación y el diseño del nivel/escenario. Se pudo desarrollar funcionalidades sólidas y concordantes con las historias definidas para el PMV, aunque aún no alcanzó el nivel final deseado.
● A medida que surgieron y se abordaron diversos desafíos durante el desarrollo del PMV, se pudo observar una notable mejora en la comunicación y el compromiso del equipo. Estos problemas, detallados más adelante, jugaron un papel fundamental al evidenciar áreas de mejora. El compromiso general con el proyecto y la comunicación experimentaron un crecimiento significativo como resultado directo de enfrentar y superar dichos obstáculos.
● A pesar de que las tareas no fueron asignadas de manera óptima, se logró completarlas dentro de los plazos establecidos. Cada miembro del equipo demostró un compromiso firme para finalizar sus respectivas tareas, a pesar de las dificultades en la asignación inicial.

¿Qué salió mal?	
● Ocurrió una falta de enfoque en cuanto a qué aspectos debían recibir mayor atención. Se priorizó de manera insuficiente la parte funcional del proyecto en comparación con los aspectos visuales, los cuales finalmente no se utilizaron en gran medida. Esta falta de enfoque resultó en una distribución desequilibrada de esfuerzos y recursos, lo que afectó negativamente el avance y la calidad del trabajo realizado.
● Se cometió el error de subestimar tanto el PMV como la dificultad inherente al proyecto. Después de entregadas las HU, se invirtió más tiempo del necesario en actividades de investigación, lo que llevó a que la parte funcional del proyecto no recibiera la atención adecuada, llegando al punto de que algunas funcionalidades se programaron con poco margen de tiempo antes de la presentación final. El proyecto tenía una visión clara, pero no se evaluó debidamente la complejidad de ciertas funcionalidades, lo que llevó a descuidarlas en favor de otras que, en retrospectiva, no requerían tanta dedicación. Esta falta de discernimiento en la asignación de prioridades afectó negativamente la ejecución y el logro de los objetivos establecidos.
● Se presentaron complicaciones para la planificación de pruebas del sistema debido a la disponibilidad del hardware necesario; esto debido a la concurrencia de varios grupos que requerían el uso del VR durante la semana previa a la presentación. Sin acceso al VR no era posible probar adecuadamente ninguna funcionalidad, ni siquiera utilizando métodos alternativos de prueba debido al modo de operación de nuestro software. Esta limitación tuvo un impacto negativo en la calidad de las pruebas y, en última instancia, en la validación del sistema.
● Se evidenció una falta de coordinación en la construcción (build) y manejo del proyecto en sí mismo. No se realizó una prueba exhaustiva de build y ejecución del proyecto completo en un notebook, a pesar de que Unreal Engine es un sistema exigente incluso para un equipo portátil de gama alta. Esto nos dejó desprevenidos ante las dificultades experimentadas en las horas previas a la presentación. Además, se subestimó el tamaño del proyecto en relación a las capacidades habituales de GitHub, lo cual generó problemas adicionales. Sin embargo, es importante destacar que esta situación ha sido corregida.
● Se identificó una falta de investigación en las propiedades realistas del sistema. Aunque el proyecto cumplió con los requisitos funcionales necesarios, al ser un sistema de simulación de situaciones complejas, no alcanzó el nivel de realismo esperado, a pesar de tener ciertas nociones de cómo debería ser.
● Ocurre una falta de preparación técnica para abordar adecuadamente las historias de usuario. Debido a las circunstancias mencionadas anteriormente, las historias requerían un nivel mínimo de conocimiento de la herramienta Unreal Engine, lo cual fue pasado por alto al no coordinar de manera efectiva el enfoque que se debía dar a la parte funcional que Unreal Engine finalmente se encarga de desarrollar.
● Se observó una falta de enfoque inicial en la resolución de problemas. Se tenía la idea de que el equipo debía encargarse en su totalidad de la creación de los modelos, lo cual resultó en un desequilibrio en la distribución del tiempo de trabajo, con una mayor dedicación a la parte de modelaje en lugar de la parte funcional. Sin embargo, esta asignación desproporcionada de recursos no resultó beneficioso cuando surgieron dificultades durante la etapa de programación, ya que la carga de trabajo recayó en aquellos que estaban enfocados en la parte funcional del proyecto.

¿Que se debería mantener?
● Mantener un ambiente positivo y un buen ánimo entre los miembros. Durante este periodo, se pudo observar una dinámica colaborativa y amigable entre los integrantes del equipo, lo cual contribuyó a un clima de trabajo favorable. Mantener el ambiente es esencial para fomentar la motivación, el compromiso y la productividad.
● El nivel de comunicación y compromiso alcanzado en las etapas finales del PMV. A pesar de los problemas iniciales de compromiso y comunicación mencionados previamente, en las últimas reuniones se evidenció un incremento en estos aspectos, que es un mínimo necesario que debe mantenerse a lo largo del resto del proyecto.
● Mantener el compromiso de cada miembro del equipo para completar las tareas asignadas de la mejor manera posible. A pesar de la asignación deficiente de tareas en términos de funcionalidad, es importante destacar que todas las tareas se llevaron a cabo, aunque finalmente algunas no fueran completamente utilizadas; de todas formas, todo el trabajo realizado será útil a futuro en el proyecto.